package com.eugenefe.entity;

// Generated Apr 10, 2013 4:09:22 PM by Hibernate Tools 3.4.0.CR1

import java.math.BigDecimal;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.PrimaryKeyJoinColumn;
import javax.persistence.Table;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;
import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Parameter;

/**
 * Futures generated by hbm2java
 */
@Entity
@Table(name = "FUTURES")
public class Futures implements java.io.Serializable {

	private String futuresId;
	private MarketVariable marketVariableByUnderlyingId;
	private MarketVariable marketVariableByMvId;
	private String issueDate;
	private String maturityDate;
	private BigDecimal notionalAmt;
	private BigDecimal strikePrice;
	private String sourceTable;
	private String userName;
	private String lastUpdated;
	private BigDecimal versionNo;
	private Set<FuturesHis> futuresHises = new HashSet<FuturesHis>(0);

	public Futures() {
	}

	public Futures(MarketVariable marketVariableByMvId) {
		this.marketVariableByMvId = marketVariableByMvId;
	}

	public Futures(MarketVariable marketVariableByUnderlyingId, MarketVariable marketVariableByMvId, String issueDate,
			String maturityDate, BigDecimal notionalAmt, BigDecimal strikePrice, String sourceTable, String userName,
			String lastUpdated, BigDecimal versionNo, Set<FuturesHis> futuresHises) {
		this.marketVariableByUnderlyingId = marketVariableByUnderlyingId;
		this.marketVariableByMvId = marketVariableByMvId;
		this.issueDate = issueDate;
		this.maturityDate = maturityDate;
		this.notionalAmt = notionalAmt;
		this.strikePrice = strikePrice;
		this.sourceTable = sourceTable;
		this.userName = userName;
		this.lastUpdated = lastUpdated;
		this.versionNo = versionNo;
		this.futuresHises = futuresHises;
	}

	@GenericGenerator(name = "generator", strategy = "foreign", parameters = @Parameter(name = "property", value = "marketVariableByMvId"))
	@Id
	@GeneratedValue(generator = "generator")
	@Column(name = "FUTURES_ID", unique = true, nullable = false, length = 20)
	@Size(max = 20)
	public String getFuturesId() {
		return this.futuresId;
	}

	public void setFuturesId(String futuresId) {
		this.futuresId = futuresId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "UNDERLYING_ID")
	public MarketVariable getMarketVariableByUnderlyingId() {
		return this.marketVariableByUnderlyingId;
	}

	public void setMarketVariableByUnderlyingId(MarketVariable marketVariableByUnderlyingId) {
		this.marketVariableByUnderlyingId = marketVariableByUnderlyingId;
	}

	@OneToOne(fetch = FetchType.LAZY)
	@PrimaryKeyJoinColumn
	@NotNull
	@Size(max = 20)
	public MarketVariable getMarketVariableByMvId() {
		return this.marketVariableByMvId;
	}

	public void setMarketVariableByMvId(MarketVariable marketVariableByMvId) {
		this.marketVariableByMvId = marketVariableByMvId;
	}

	@Column(name = "ISSUE_DATE", length = 8)
	@Size(max = 8)
	public String getIssueDate() {
		return this.issueDate;
	}

	public void setIssueDate(String issueDate) {
		this.issueDate = issueDate;
	}

	@Column(name = "MATURITY_DATE", length = 8)
	@Size(max = 8)
	public String getMaturityDate() {
		return this.maturityDate;
	}

	public void setMaturityDate(String maturityDate) {
		this.maturityDate = maturityDate;
	}

	@Column(name = "NOTIONAL_AMT", scale = 0)
	public BigDecimal getNotionalAmt() {
		return this.notionalAmt;
	}

	public void setNotionalAmt(BigDecimal notionalAmt) {
		this.notionalAmt = notionalAmt;
	}

	@Column(name = "STRIKE_PRICE", precision = 10, scale = 4)
	public BigDecimal getStrikePrice() {
		return this.strikePrice;
	}

	public void setStrikePrice(BigDecimal strikePrice) {
		this.strikePrice = strikePrice;
	}

	@Column(name = "SOURCE_TABLE", length = 50)
	@Size(max = 50)
	public String getSourceTable() {
		return this.sourceTable;
	}

	public void setSourceTable(String sourceTable) {
		this.sourceTable = sourceTable;
	}

	@Column(name = "USER_NAME", length = 20)
	@Size(max = 20)
	public String getUserName() {
		return this.userName;
	}

	public void setUserName(String userName) {
		this.userName = userName;
	}

	@Column(name = "LAST_UPDATED", length = 8)
	@Size(max = 8)
	public String getLastUpdated() {
		return this.lastUpdated;
	}

	public void setLastUpdated(String lastUpdated) {
		this.lastUpdated = lastUpdated;
	}

	@Column(name = "VERSION_NO", precision = 22, scale = 0)
	public BigDecimal getVersionNo() {
		return this.versionNo;
	}

	public void setVersionNo(BigDecimal versionNo) {
		this.versionNo = versionNo;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "futures")
	public Set<FuturesHis> getFuturesHises() {
		return this.futuresHises;
	}

	public void setFuturesHises(Set<FuturesHis> futuresHises) {
		this.futuresHises = futuresHises;
	}

}
